# The Dremio image used in the cluster.

# Using the image tag latest or in the form X.Y
# will potentially cause Dremio to upgrade versions
# automatically during redeployments and may negatively impact
# the cluster.
image: dremio/dremio-oss
imageTag: latest

# Annotations, labels, node selectors, and tolerations
#
# annotations: Annotations are applied to the StatefulSets that are deployed.
# podAnnotations: Pod annotations are applied to the pods that are deployed.
# labels: Labels operate much like annotations.
# podLabels: Labels that are applied to the pods that are deployed.
# nodeSelector: Target pods to nodes based on labels set on the nodes. For more
#   information, see https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
# tolerations: Tolerations allow the negation of taints that have been applied to some set of nodes
#   in the Kubernetes cluster so that pods can be scheduled on those tainted nodes.
annotations: {}
podAnnotations: {}
labels: {}
podLabels: {}
nodeSelector: {}
tolerations: []

# Dremio Coordinator
coordinator:
  # CPU & Memory
  # Memory allocated to each coordinator, expressed in MB.
  # CPU allocated to each coordinator, expressed in CPU cores.
  cpu: 1
  memory: 4096

  # This count is used for slave coordinators only.
  # The total number of coordinators will always be count + 1.
  # If this is greater than zero then the client and flight ports on the master
  # will be deactivated to steer these requests away from the master node.
  count: 0

  # Coordinator data volume size (applies to the master coordinator only).
  # In most managed Kubernetes environments (AKS, GKE, etc.), the size of the disk has a direct impact on
  # the provisioned and maximum performance of the disk.
  volumeSize: 100Gi

  # Uncomment the lines below to use a custom set of extra startup parameters for the coordinator.
  extraStartParams: >-
    -Ddremio.log.path=/opt/dremio/data/log
    -XX:HeapDumpPath=/opt/dremio/data
    -XX:ErrorFile=/opt/dremio/data/hs_err_pid%p.log  

  # Extra Volumes
  # Uncomment below to use a custom set of extra volumes for the coordinator.
  extraVolumes: ["/volume1/dremio-lab/"]

  # Extra Volume Mounts
  # Uncomment below to use a custom set of extra volume mounts for the coordinator.
  extraVolumeMounts: ["/opt/dremio/data/"]

  # Extra Environment Variables
  # Uncomment below to add extra environment variables for the coordinator.
  #extraEnvs: []

  # Uncomment this value to use a different storage class for the coordinator.
  storageClass: nfs-dremio-lab

  # Uncomment this value to use a different storage class for the coordinator logs.
  logStorageClass: nfs-dremio-lab

  # Uncomment this value to write logs to a file on disk.
  writeLogsToFile: true

  # Web UI
  web:
    port: 9047
    tls:
      # To enable TLS for the web UI, set the enabled flag to true and provide
      # the appropriate Kubernetes TLS secret.
      enabled: false

      # To create a TLS secret, use the following command:
      # kubectl create secret tls ${TLS_SECRET_NAME} --key ${KEY_FILE} --cert ${CERT_FILE}
      secret: dremio-tls-secret-ui

  # ODBC/JDBC Client
  client:
    port: 31010
    tls:
      # To enable TLS for the client endpoints, set the enabled flag to
      # true and provide the appropriate Kubernetes TLS secret. Client
      # endpoint encryption is available only on Dremio Enterprise
      # Edition and should not be enabled otherwise.
      enabled: false

      # To create a TLS secret, use the following command:
      # kubectl create secret tls ${TLS_SECRET_NAME} --key ${KEY_FILE} --cert ${CERT_FILE}
      secret: dremio-tls-secret-client

  # Flight Client
  flight:
    port: 32010
    tls:
      # To enable TLS for the Flight endpoints, set the enabled flag to
      # true and provide the appropriate Kubernetes TLS secret.
      enabled: false

      # To create a TLS secret, use the following command:
      # kubectl create secret tls ${TLS_SECRET_NAME} --key ${KEY_FILE} --cert ${CERT_FILE}
      secret: dremio-tls-secret-flight

  # Startup Probe
  startupProbe:
    # Max timeout for the probe is calculated as failureThreshold * periodSeconds
    # failureThreshold: Maximum number of allowed failures
    failureThreshold: 300
    # periodSeconds: Polling frequency expressed in seconds
    periodSeconds: 1

  # Readiness Probe
  readinessProbe:
    # Max timeout for the probe is calculated as failureThreshold * periodSeconds
    # failureThreshold: Maximum number of allowed failures
    failureThreshold: 120
    # periodSeconds: Polling frequency expressed in seconds
    periodSeconds: 1

# Dremio Executor
executor:
  # CPU & Memory
  # Memory allocated to each executor, expressed in MB.
  # CPU allocated to each executor, expressed in CPU cores.
  cpu: 1
  memory: 4096

  # Engines
  # Engine names be 47 characters or less and be lowercase alphanumber characters or '-'.
  # Note: The number of executor pods will be the length of the array below * count.
  engines: ["default"]
  count: 3

  # Executor volume size.
  volumeSize: 150Gi

  # Uncomment the lines below to use a custom set of extra startup parameters for executors.
  extraStartParams: >-
    -Ddremio.log.path=/opt/dremio/data/log
    -XX:HeapDumpPath=/opt/dremio/data
    -XX:ErrorFile=/opt/dremio/data/hs_err_pid%p.log  

  # Extra Volumes
  # Uncomment below to use a custom set of extra volumes for the coordinator.
  extraVolumes: ["/volume1/dremio-lab/"]

  # Extra Volume Mounts
  # Uncomment below to use a custom set of extra volume mounts for the coordinator.
  extraVolumeMounts: ["/opt/dremio/data/"]

  # Extra Environment Variables
  # Uncomment below to add extra environment variables for the executors.
  #extraEnvs: []

  # Uncomment this value to use a different storage class for executors.
  storageClass: nfs-dremio-lab

  # Uncomment this value to use a different storage class for the coordinator logs.
  logStorageClass: nfs-dremio-lab

  # Uncomment this value to write logs to a file on disk.
  writeLogsToFile: true

  # Dremio C3
  # Designed for use with NVMe storage devices, performance may be impacted when using
  # persistent volume storage that resides far from the physical node.
  cloudCache:
    enabled: true

    # Uncomment this value to use a different storage class for C3.
    storageClass: microk8s-hostpath

    # Volumes to use for C3, specify multiple volumes if there are more than one local
    # NVMe disk that you would like to use for C3.
    #
    # The below example shows all valid options that can be provided for a volume.
    # volumes:
    # - name: "dremio-default-c3"
    #   size: 100Gi
    #   storageClass: "local-nvme"
    volumes:
      name: "dremio-default-c3"
      size: 50Gi
      storageClass: microk8s-hostpath

# Zookeeper
zookeeper:
  # The Zookeeper image used in the cluster.
  image: zookeeper
  imageTag: 3.8.4-jre-17

  # CPU & Memory
  # Memory allocated to each zookeeper, expressed in MB.
  # CPU allocated to each zookeeper, expressed in CPU cores.
  cpu: 0.5
  memory: 1024
  count: 3

  volumeSize: 10Gi

  # Uncomment this value to use a different storage class for Zookeeper.
  # Control where uploaded files are stored for Dremio.
  # For more information, see https://docs.dremio.com/deployment/distributed-storage.html
  storageClass: microk8s-hostpath

# Distributed Storage
distStorage:
  # The supported distributed storage types are: local (<21.0.0 only), aws, azure, gcp, or azureStorage.
  #
  # local: (<21.0.0 only) Not recommended for production use. When using local, dist-caching is disabled.
  # aws: AWS S3, additional parameters required, see "aws" section.
  type: "local"
  
  # AWS S3
  # For more details of S3 configuration, see https://docs.dremio.com/deployment/dist-store-config.html#amazon-s3
  #
  # bucketName: The name of the S3 bucket for distributed storage.
  # path: The path, relative to the bucket, to create Dremio's directories.
  # authentication: Valid types are: accessKeySecret, instanceMetadata, or awsProfile.
  #   - Note: Instance metadata is only supported in AWS EKS and requires that the
  #       EKS worker node IAM role is configured with sufficient access rights. At this time,
  #       Dremio does not support using an K8s service account based IAM role.
  # credentials: If using accessKeySecret authentication, uncomment the credentials section below.
  aws:
    # If using accessKeySecret for authentication against S3, uncomment the lines below and use the values
    # to configure the appropriate credentials.
    #
    #credentials:
    #  accessKey: "AWS Access Key"
    #  secret: "AWS Secret"
    bucketName: "AWS Bucket Name"
    path: "/"
    authentication: "metadata"

# Dremio Start Parameters
# Uncomment the below lines to provide extra start paramaters to be passed directly to Dremio during startup.
#extraStartParams: >-
#  -DsomeKey=someValue

# Extra Volumes
# Array to add extra volumes to all Dremio resources.
extraVolumes: ["/volume1/dremio-lab/"]

# Extra Volume Mounts
# Array to add extra volume mounts to all Dremio resources, normally used in conjunction wtih extraVolumes.
extraVolumeMounts: ["/opt/dremio/data/"]

# Extra Environment Variables
# Array to add extra environment variables to Dremio's pods
extraEnvs: []

# Uncomment this value to write logs to a file on disk for all Dremio resources.
writeLogsToFile: true

# Dremio Service
# The dremio-client service exposes the service for access outside of the Kubernetes cluster.
service:
  type: LoadBalancer

